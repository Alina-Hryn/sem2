-152  -> INTEGER LITERAL
=begin gf erg  gerg -> COMMENT
dfwef -> COMMENT
ewrc = end -> COMMENT
# edfvghjh rdfvhbj yghv -> COMMENT
qwerty -> COMMENT
=begin -> COMMENT
def iterator -> COMMENT
yield 'yield, ' -> COMMENT
yield 'blocks,' -> COMMENT
yield 'Ruby' -> COMMENT
end -> COMMENT
puts 1.class -> COMMENT
iterator {|yeilded| print "use #{yeilded}"} -> COMMENT
qwqwqwkkjhfjendvkjejgvhjdnv -> COMMENT
sdfgvsefb -> COMMENT
efbvesfb -> COMMENT
ervergtfcb -> COMMENT
vb -> COMMENT
dof = 12 -> COMMENT
=end -> COMMENT
5  -> INTEGER LITERAL
+  -> PLUS OR MINUS
4  -> INTEGER LITERAL
-  -> PLUS OR MINUS
3  -> INTEGER LITERAL
*  -> PLUS OR MINUS
2  -> INTEGER LITERAL
puts -> PRINT_OP
( -> FUNCTION_OP
'Some warnings occurred:\n'  -> STRING LITERAL
+  -> PLUS OR MINUS
warnings -> IDENTIFIER
. -> UNKNOWN
join -> IDENTIFIER
( -> FUNCTION_OP
"\n" -> STRING LITERAL
) -> FUNCTION_OP
)  -> FUNCTION_OP
puts  -> PRINT_OP
"iteration #{ -> STRING LITERAL
5 -> INTEGER LITERAL
}" -> STRING LITERAL
"iteration #{ -> STRING LITERAL
2 -> INTEGER LITERAL
. -> UNKNOWN
class -> CLASS_OP
} fervefgvrt"  -> STRING LITERAL
"iteration #{   -> STRING LITERAL
2.04    -> FLOAT LITERAL
} fervefgvrt #{ -> STRING LITERAL
2.04 -> FLOAT LITERAL
}"  -> STRING LITERAL
